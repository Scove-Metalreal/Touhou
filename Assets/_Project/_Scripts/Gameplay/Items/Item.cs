using _Project._Scripts.Player;
using UnityEngine;

namespace _Project._Scripts.Gameplay.Items
{
    public enum ItemType { Health, Power, Point, Bomb, Upgrade }

    public class Item : MonoBehaviour
    {
        [Header("‚öôÔ∏è Thi·∫øt l·∫≠p V·∫≠t ph·∫©m")]
        [Tooltip("Ch·ªçn lo·∫°i cho v·∫≠t ph·∫©m n√†y.")]
        public ItemType itemType;
        
        [Tooltip("Gi√° tr·ªã s·ªë c·ªßa v·∫≠t ph·∫©m.")]
        public int value;

        [Tooltip("ƒê√°nh d·∫•u n·∫øu ƒë√¢y l√† v·∫≠t ph·∫©m quan tr·ªçng r∆°i ra t·ª´ Boss.")]
        public bool isGuaranteedLoot = false; // <-- TH√äM BI·∫æN N√ÄY

        [Space(10)]
        [Header("üöÄ H√†nh vi Di chuy·ªÉn")]
        [Tooltip("T·ªëc ƒë·ªô v·∫≠t ph·∫©m b·ªã h√∫t v·ªÅ ph√≠a ng∆∞·ªùi ch∆°i.")]
        public float homingSpeed = 8f;

        [Space(10)]
        [Header("üóëÔ∏è T·ª± ƒë·ªông d·ªçn d·∫πp")]
        [Tooltip("Th·ªùi gian t·ªìn t·∫°i c·ªßa v·∫≠t ph·∫©m (gi√¢y). Sau th·ªùi gian n√†y v·∫≠t ph·∫©m s·∫Ω t·ª± h·ªßy.")]
        [SerializeField] private float lifetime = 15f;
        
        private Transform playerTarget;
        private bool isHoming = false;

        // --- TH√äM H√ÄM START ---
        void Start()
        {
            // T·ª± ƒë·ªông h·ªßy v·∫≠t ph·∫©m sau m·ªôt kho·∫£ng th·ªùi gian
            // Ch·ªâ √°p d·ª•ng cho c√°c v·∫≠t ph·∫©m kh√¥ng ph·∫£i l√† loot quan tr·ªçng
            if (!isGuaranteedLoot)
            {
                Destroy(gameObject, lifetime);
            }
        }

        void Update()
        {
            if (isHoming && playerTarget != null)
            {
                transform.position = Vector2.MoveTowards(transform.position, playerTarget.position, homingSpeed * Time.deltaTime);
            }
        }

        // --- TH√äM H√ÄM ONBECAMEINVISIBLE ---
        // H√†m n√†y ƒë∆∞·ª£c Unity t·ª± ƒë·ªông g·ªçi khi v·∫≠t th·ªÉ kh√¥ng c√≤n ƒë∆∞·ª£c camera nh√¨n th·∫•y
        void OnBecameInvisible()
        {
            // T·ª± h·ªßy khi ra kh·ªèi m√†n h√¨nh
            // Ch·ªâ √°p d·ª•ng cho c√°c v·∫≠t ph·∫©m kh√¥ng ph·∫£i l√† loot quan tr·ªçng
            if (!isGuaranteedLoot)
            {
                Destroy(gameObject);
            }
        }

        public void StartHoming(Transform target)
        {
            isHoming = true;
            playerTarget = target;
        }

        void OnTriggerEnter2D(Collider2D other)
        {
            if (other.CompareTag("Player"))
            {
                PlayerState playerState = other.GetComponent<PlayerState>();
                if (playerState != null)
                {
                    Collect(playerState);
                    Destroy(gameObject); 
                }
            }
        }
        
        private void Collect(PlayerState player)
        {
            switch (itemType)
            {
                case ItemType.Health:
                    player.Heal(value);
                    break;
                case ItemType.Power:
                    player.AddPower((float)value / 100f); 
                    break;
                case ItemType.Point:
                    player.AddScore(value);
                    break;
                case ItemType.Bomb:
                    player.AddBomb(value); 
                    break;
                case ItemType.Upgrade:
                    player.LevelUp();
                    break;
            }
        }
    }
}